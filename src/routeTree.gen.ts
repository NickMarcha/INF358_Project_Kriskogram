/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as StateMigrationRouteImport } from './routes/state-migration'
import { Route as KriskogramSimpleRouteImport } from './routes/kriskogram-simple'
import { Route as KriskogramRouteImport } from './routes/kriskogram'
import { Route as ExplorerRouteImport } from './routes/explorer'
import { Route as DatasetsRouteImport } from './routes/datasets'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'

const StateMigrationRoute = StateMigrationRouteImport.update({
  id: '/state-migration',
  path: '/state-migration',
  getParentRoute: () => rootRouteImport,
} as any)
const KriskogramSimpleRoute = KriskogramSimpleRouteImport.update({
  id: '/kriskogram-simple',
  path: '/kriskogram-simple',
  getParentRoute: () => rootRouteImport,
} as any)
const KriskogramRoute = KriskogramRouteImport.update({
  id: '/kriskogram',
  path: '/kriskogram',
  getParentRoute: () => rootRouteImport,
} as any)
const ExplorerRoute = ExplorerRouteImport.update({
  id: '/explorer',
  path: '/explorer',
  getParentRoute: () => rootRouteImport,
} as any)
const DatasetsRoute = DatasetsRouteImport.update({
  id: '/datasets',
  path: '/datasets',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/datasets': typeof DatasetsRoute
  '/explorer': typeof ExplorerRoute
  '/kriskogram': typeof KriskogramRoute
  '/kriskogram-simple': typeof KriskogramSimpleRoute
  '/state-migration': typeof StateMigrationRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/datasets': typeof DatasetsRoute
  '/explorer': typeof ExplorerRoute
  '/kriskogram': typeof KriskogramRoute
  '/kriskogram-simple': typeof KriskogramSimpleRoute
  '/state-migration': typeof StateMigrationRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/datasets': typeof DatasetsRoute
  '/explorer': typeof ExplorerRoute
  '/kriskogram': typeof KriskogramRoute
  '/kriskogram-simple': typeof KriskogramSimpleRoute
  '/state-migration': typeof StateMigrationRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/datasets'
    | '/explorer'
    | '/kriskogram'
    | '/kriskogram-simple'
    | '/state-migration'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/datasets'
    | '/explorer'
    | '/kriskogram'
    | '/kriskogram-simple'
    | '/state-migration'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/datasets'
    | '/explorer'
    | '/kriskogram'
    | '/kriskogram-simple'
    | '/state-migration'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  DatasetsRoute: typeof DatasetsRoute
  ExplorerRoute: typeof ExplorerRoute
  KriskogramRoute: typeof KriskogramRoute
  KriskogramSimpleRoute: typeof KriskogramSimpleRoute
  StateMigrationRoute: typeof StateMigrationRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/state-migration': {
      id: '/state-migration'
      path: '/state-migration'
      fullPath: '/state-migration'
      preLoaderRoute: typeof StateMigrationRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/kriskogram-simple': {
      id: '/kriskogram-simple'
      path: '/kriskogram-simple'
      fullPath: '/kriskogram-simple'
      preLoaderRoute: typeof KriskogramSimpleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/kriskogram': {
      id: '/kriskogram'
      path: '/kriskogram'
      fullPath: '/kriskogram'
      preLoaderRoute: typeof KriskogramRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/explorer': {
      id: '/explorer'
      path: '/explorer'
      fullPath: '/explorer'
      preLoaderRoute: typeof ExplorerRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/datasets': {
      id: '/datasets'
      path: '/datasets'
      fullPath: '/datasets'
      preLoaderRoute: typeof DatasetsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  DatasetsRoute: DatasetsRoute,
  ExplorerRoute: ExplorerRoute,
  KriskogramRoute: KriskogramRoute,
  KriskogramSimpleRoute: KriskogramSimpleRoute,
  StateMigrationRoute: StateMigrationRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
