const p={Connecticut:{region:"Northeast",division:"New England"},Maine:{region:"Northeast",division:"New England"},Massachusetts:{region:"Northeast",division:"New England"},"New Hampshire":{region:"Northeast",division:"New England"},"Rhode Island":{region:"Northeast",division:"New England"},Vermont:{region:"Northeast",division:"New England"},"New Jersey":{region:"Northeast",division:"Mid-Atlantic"},"New York":{region:"Northeast",division:"Mid-Atlantic"},Pennsylvania:{region:"Northeast",division:"Mid-Atlantic"},Delaware:{region:"Northeast",division:"Mid-Atlantic"},Maryland:{region:"Northeast",division:"Mid-Atlantic"},Illinois:{region:"Midwest",division:"East North Central"},Indiana:{region:"Midwest",division:"East North Central"},Michigan:{region:"Midwest",division:"East North Central"},Ohio:{region:"Midwest",division:"East North Central"},Wisconsin:{region:"Midwest",division:"East North Central"},Iowa:{region:"Midwest",division:"West North Central"},Kansas:{region:"Midwest",division:"West North Central"},Minnesota:{region:"Midwest",division:"West North Central"},Missouri:{region:"Midwest",division:"West North Central"},Nebraska:{region:"Midwest",division:"West North Central"},"North Dakota":{region:"Midwest",division:"West North Central"},"South Dakota":{region:"Midwest",division:"West North Central"},"District of Columbia":{region:"South",division:"South Atlantic"},Florida:{region:"South",division:"South Atlantic"},Georgia:{region:"South",division:"South Atlantic"},"North Carolina":{region:"South",division:"South Atlantic"},"South Carolina":{region:"South",division:"South Atlantic"},Virginia:{region:"South",division:"South Atlantic"},"West Virginia":{region:"South",division:"South Atlantic"},Alabama:{region:"South",division:"East South Central"},Kentucky:{region:"South",division:"East South Central"},Mississippi:{region:"South",division:"East South Central"},Tennessee:{region:"South",division:"East South Central"},Arkansas:{region:"South",division:"West South Central"},Louisiana:{region:"South",division:"West South Central"},Oklahoma:{region:"South",division:"West South Central"},Texas:{region:"South",division:"West South Central"},Arizona:{region:"West",division:"Mountain"},Colorado:{region:"West",division:"Mountain"},Idaho:{region:"West",division:"Mountain"},Montana:{region:"West",division:"Mountain"},Nevada:{region:"West",division:"Mountain"},"New Mexico":{region:"West",division:"Mountain"},Utah:{region:"West",division:"Mountain"},Wyoming:{region:"West",division:"Mountain"},Alaska:{region:"West",division:"Pacific"},California:{region:"West",division:"Pacific"},Hawaii:{region:"West",division:"Pacific"},Oregon:{region:"West",division:"Pacific"},Washington:{region:"West",division:"Pacific"}},O={Northeast:"#3b82f6",Midwest:"#f59e0b",South:"#ef4444",West:"#10b981"},k={"New England":"#60a5fa","Mid-Atlantic":"#3b82f6","East North Central":"#fbbf24","West North Central":"#f59e0b","South Atlantic":"#f87171","East South Central":"#ef4444","West South Central":"#dc2626",Mountain:"#34d399",Pacific:"#10b981"};function I(e){var M,w;const i=e.trim().split(`
`);if(i.length<4)throw new Error("Invalid CSV format: needs at least 4 lines (3 headers + data)");const o=i[1],l=E(o),d=[];for(let s=7;s<l.length;s+=2){const t=l[s].trim();t&&t!=="Total"&&!t.includes("year ago")&&d.push(t)}const r=[],f=[],v=new Set;for(let s=3;s<i.length;s++){const t=E(i[s]),h=t[0].trim();if(!h||h==="Puerto Rico")continue;const c=b(h);if(!v.has(c)){v.add(c);const n=p[h];r.push({id:c,label:h,region:n==null?void 0:n.region,division:n==null?void 0:n.division})}let u=0;for(let n=9;n<t.length&&u<d.length;n+=2){const S=d[u];if(!S){u++;continue}const g=b(S),N=(M=t[n])==null?void 0:M.trim(),C=(w=t[n+1])==null?void 0:w.trim();if(c===g){u++;continue}if(!v.has(g)){v.add(g);const a=p[S];r.push({id:g,label:S,region:a==null?void 0:a.region,division:a==null?void 0:a.division})}if(N&&N!=="N/A"&&N!=="0"){const a=A(N);if(a>0){const W={source:c,target:g,value:a};if(C&&C!=="+/- 0"){const m=A(C.replace("+/- ","").replace("+/-",""));m>0&&(W.moe=m)}f.push(W)}}u++}}return r.sort((s,t)=>s.label.localeCompare(t.label)),{nodes:r,edges:f}}function E(e){const i=[];let o="",l=!1;for(let d=0;d<e.length;d++){const r=e[d];r==='"'?l=!l:r===","&&!l?(i.push(o),o=""):o+=r}return i.push(o),i}function A(e){const i=e.replace(/[",]/g,""),o=Number.parseFloat(i);return Number.isNaN(o)?0:o}function b(e){return e.trim().replace(/\s+/g,"_").replace(/[^a-zA-Z0-9_]/g,"").toUpperCase()}async function V(e){const i=await fetch(e);if(!i.ok)throw new Error(`Failed to load CSV: ${i.statusText}`);return i.text()}export{k as D,O as R,V as l,I as p};
